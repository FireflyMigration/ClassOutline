<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:vs_shell="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Utilities"
             
             xmlns:ControlLibrary="clr-namespace:ClassOutline.ControlLibrary;assembly=ClassOutline.ControlLibrary"
             xmlns:platformUi="clr-namespace:Microsoft.VisualStudio.PlatformUI;assembly=Microsoft.VisualStudio.Shell.15.0"


             x:Class="ClassOutline.ClassOutlineControl"
            
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300"
             x:Name="ClassOutlineToolWindow"
    DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="uicontrollercheckboxstyle" TargetType="{x:Type CheckBox}" >
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
          
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <StackPanel Orientation="Horizontal">
                                <Image x:Name="checkboxImage" Source="Resources/UIController Disabled.png" Width="16" Margin="0" />
                                
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkboxImage" Property="Source" Value="Resources/UIController Enabled.png" />
                                </Trigger>
                               
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="3" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                <GradientStop Color="#FFF0F0EA" Offset="0.9"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74"/>
            <Style x:Key="refreshButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="background" BorderBrush="#FFE5C365" BorderThickness="1" Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFCF2" Offset="0"/>
                                            <GradientStop Color="#FFFFECB5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Image x:Name="image" Height="16" Source="Resources/refresh.png" Width="16" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="image">
                                    <Setter Property="Visibility" TargetName="background" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="image"/>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
           
        
            <Style x:Key="syncButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="background" BorderBrush="#FFE5C365" BorderThickness="1" Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFCF2" Offset="0"/>
                                            <GradientStop Color="#FFFFECB5" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Image x:Name="image" Height="16" Source="Resources/sync.png" Width="16" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="image">
                                    <Setter Property="Visibility" TargetName="background" Value="Visible"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="image"/>
                                <Trigger Property="IsKeyboardFocused" Value="true"/>
                                <Trigger Property="ToggleButton.IsChecked" Value="true"/>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </ResourceDictionary>



    </UserControl.Resources>
   
    <Grid>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="26"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <ToolBarPanel Grid.Row="0" Grid.Column="0"  Height="26" OpacityMask="Black"  Background="{DynamicResource {x:Static platformUi:EnvironmentColors.SystemMenuBrushKey}}"   VerticalAlignment="Top">
                <StackPanel Orientation="Horizontal">
                    <Button x:Name="refreshButton" ToolTip="Refresh" Content="Button" Width="22" Style="{DynamicResource refreshButtonStyle}" Height="22" HorizontalAlignment="Left" RenderTransformOrigin="-5.292,3.417" Margin="4,2,0,0" Click="refreshButton_Click" >
                    
                    </Button>
                            
                    <Button x:Name="syncButton" ToolTip ="Resync with active code window"  Content="Button" Width="22" Style="{DynamicResource syncButtonStyle}" Height="22" RenderTransformOrigin="-5.292,3.417" Margin="4,2,0,0" Click="syncButton_Click"/>
                    <CheckBox x:Name="FireflyImagesEnabledControl" VerticalAlignment="Center" IsChecked="{Binding FireflyImagesEnabled}" IsEnabled="True"  Style="{DynamicResource uicontrollercheckboxstyle}" ToolTip="Highlight UIController" Unchecked="FireflyImagesEnabled_Checked"  Checked="FireflyImagesEnabled_Checked" />
                </StackPanel>
            </ToolBarPanel>
         
            <ControlLibrary:OutlineControl Grid.Row="1" Grid.Column="0" x:Name="tvOutline"  DataContext="{Binding Data}" ItemDoubleClick="tvOutline_ItemDoubleClick"/>

        </Grid>
    </Grid>
</UserControl>
